1，c语言中初始化和赋值没什么区别，因为c语言定义时如果未初始化，直接使用那块内存，对内存里的值不管，然后赋值时在写入；但c++有一些区别，普通内置类型应该同c，但对象定义时若未初始化则调用默认构造函数（也就是说没初始化实际初始化了），然后赋值时再将值写入内存。
2，c/c++函数传递参数时，对于是否有中间变量与编译器有关，下面的测试结果是赋值，所以应该有中间变量。
class A{
	public:
		int i;
	public:
		A(int i){ this->i = i;}
};
class B{
	private:
		A a;
	public:
		B(A a){//B(A a):a(a) 这是初始化
			this->a = a;//error，这是赋值，因为是对象，所以先调用A()，但发现没有。
		}
};
void fun(A a)
{
    cout << a.i << endl;
}
3，c++的初始化列表执行早于构造函数里面的实现。（如果一个对象没有默认构造函数，然后在实现赋值会报错）
class A{
	private:
		int i;
	public:
		A(int i){ this->i = i;}
};
class B{
	private:
		A a;
	public:
		B(A a){//B(A a):a(a) 这是初始化
			this->a = a;//error，这是赋值，因为是对象，所以先调用A()，但发现没有。
		}
};